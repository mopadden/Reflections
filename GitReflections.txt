How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It highlights differences in context

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Make it easy to find changes and revert errors if needed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Log related changes together, so comparing versions is more useful.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed for managing changes to code, which is normally written in more than one related file. In Google Docs, documents would be able to serve a function by themselves.

How can you use the commands git log and git diff to view the history of files?

	git log
	git log --grep '<commit text'
	git log --stat
	git diff <commit-id> <commit-id>    

How might using version control make you more confident to make changes that
could break something?

    It is easy to roll back to an earlier commit if something is broken and search the difference between commits for errors

Now that you have your workspace set up, what do you want to try using Git for?

    New code projects

